module.exports=function(e){function t(n){if(s[n])return s[n].exports;var a=s[n]={i:n,l:!1,exports:{}};return e[n].call(a.exports,a,a.exports,t),a.l=!0,a.exports}var s={};return t.m=e,t.c=s,t.i=function(e){return e},t.d=function(e,s,n){t.o(e,s)||Object.defineProperty(e,s,{configurable:!1,enumerable:!0,get:n})},t.n=function(e){var s=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(s,"a",s),s},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p="",t(t.s=9)}([function(e,t){e.exports=require("babel-runtime/core-js/json/stringify")},function(e,t){e.exports=require("babel-runtime/helpers/classCallCheck")},function(e,t){e.exports=require("babel-runtime/helpers/createClass")},function(e,t,s){"use strict";var n=s(0),a=s.n(n),i=s(7),o=s.n(i),p=s(1),l=s.n(p),d=s(2),c=s.n(d),h=s(8),u=s.n(h),r="x-version-id",g="x-cluster-id",f="token",y="BEARER",m="Authorization",R=function(){function e(){l()(this,e),this.teamId="",this.serverVersion="",this.clusterId="",this.logToConsole=!1,this.useToken=!1,this.token="",this.url="",this.urlVersion="/api/v3",this.defaultHeaders={"X-Requested-With":"XMLHttpRequest"},this.translations={connectionError:"There appears to be a problem with your internet connection.",unknownError:"We received an unexpected status code from the server."}}return c()(e,[{key:"setUrl",value:function(e){this.url=e}},{key:"setAcceptLanguage",value:function(e){this.defaultHeaders["Accept-Language"]=e}},{key:"setOAuthToken",value:function(e){this.token=e,this.useHeaderToken()}},{key:"setTeamId",value:function(e){this.teamId=e}},{key:"getTeamId",value:function(){return this.teamId||console.error("You are trying to use a route that requires a team_id, but you have not called setTeamId() in client.jsx"),this.teamId}},{key:"getServerVersion",value:function(){return this.serverVersion}},{key:"getBaseRoute",value:function(){return""+this.url+this.urlVersion}},{key:"getAdminRoute",value:function(){return""+this.url+this.urlVersion+"/admin"}},{key:"getGeneralRoute",value:function(){return""+this.url+this.urlVersion+"/general"}},{key:"getLicenseRoute",value:function(){return""+this.url+this.urlVersion+"/license"}},{key:"getTeamsRoute",value:function(){return""+this.url+this.urlVersion+"/teams"}},{key:"getTeamNeededRoute",value:function(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.getTeamId();return""+this.url+this.urlVersion+"/teams/"+e}},{key:"getChannelsRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels"}},{key:"getChannelNameRoute",value:function(e){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels/name/"+e}},{key:"getChannelNeededRoute",value:function(e){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels/"+e}},{key:"getCommandsRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/commands"}},{key:"getEmojiRoute",value:function(){return""+this.url+this.urlVersion+"/emoji"}},{key:"getHooksRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/hooks"}},{key:"getPostsRoute",value:function(e){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/channels/"+e+"/posts"}},{key:"getUsersRoute",value:function(){return""+this.url+this.urlVersion+"/users"}},{key:"getTeamFilesRoute",value:function(){return""+this.url+this.urlVersion+"/teams/"+this.getTeamId()+"/files"}},{key:"getFileRoute",value:function(e){return""+this.url+this.urlVersion+"/files/"+e}},{key:"getOAuthRoute",value:function(){return""+this.url+this.urlVersion+"/oauth"}},{key:"getUserNeededRoute",value:function(e){return""+this.url+this.urlVersion+"/users/"+e}},{key:"getWebrtcRoute",value:function(){return""+this.url+this.urlVersion+"/webrtc"}},{key:"setTranslations",value:function(e){this.translations=e}},{key:"enableLogErrorsToConsole",value:function(e){this.logToConsole=e}},{key:"useHeaderToken",value:function(){this.useToken=!0,""!==this.token&&(this.defaultHeaders[m]=y+" "+this.token)}},{key:"track",value:function(e,t,s,n,a){}},{key:"trackPage",value:function(){}},{key:"handleError",value:function(e,t){}},{key:"handleSuccess",value:function(e){}},{key:"handleResponse",value:function(e,t,s,n,a){if(a&&a.header&&(a.header[r]&&(this.serverVersion=a.header[r]),a.header[g]&&(this.clusterId=a.header[g])),n){var i=null;a&&a.body&&a.body.id&&(i=a.body);var o="";return i?o="method="+e+" msg="+i.message+" detail="+i.detailed_error+" rid="+i.request_id:(o="method="+e+" status="+n.status+" statusCode="+n.statusCode+" err="+n,i=0!==n.status&&n.status?{message:this.translations.unknownError+" ("+n.status+")"}:{message:this.translations.connectionError}),this.logToConsole&&(console.error(o),console.error(i)),this.track("api","api_weberror",e,"message",o),this.handleError(n,a),void(s&&s(i,n,a))}t&&(a&&void 0!==a.body?t(a.body,a):(console.error("Missing response body for "+e),t("",a)),this.handleSuccess(a))}},{key:"getClientConfig",value:function(e,t){return u.a.get(this.getGeneralRoute()+"/client_props").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getClientConfig",e,t))}},{key:"getPing",value:function(e,t){return u.a.get(this.getGeneralRoute()+"/ping").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPing",e,t))}},{key:"logClientError",value:function(e){var t={};t.level="ERROR",t.message=e,u.a.post(this.getGeneralRoute()+"/log_client").set(this.defaultHeaders).type("application/json").accept("application/json").send(t).end(this.handleResponse.bind(this,"logClientError",null,null))}},{key:"reloadConfig",value:function(e,t){return u.a.get(this.getAdminRoute()+"/reload_config").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"reloadConfig",e,t))}},{key:"invalidateAllCaches",value:function(e,t){return u.a.get(this.getAdminRoute()+"/invalidate_all_caches").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"invalidate_all_caches",e,t))}},{key:"recycleDatabaseConnection",value:function(e,t){return u.a.get(this.getAdminRoute()+"/recycle_db_conn").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"recycleDatabaseConnection",e,t))}},{key:"getTranslations",value:function(e,t,s){return u.a.get(e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTranslations",t,s))}},{key:"getComplianceReports",value:function(e,t){return u.a.get(this.getAdminRoute()+"/compliance_reports").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getComplianceReports",e,t))}},{key:"uploadBrandImage",value:function(e,t,s){u.a.post(this.getAdminRoute()+"/upload_brand_image").set(this.defaultHeaders).accept("application/json").attach("image",e,e.name).end(this.handleResponse.bind(this,"uploadBrandImage",t,s))}},{key:"saveComplianceReports",value:function(e,t,s){return u.a.post(this.getAdminRoute()+"/save_compliance_report").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"saveComplianceReports",t,s))}},{key:"getLogs",value:function(e,t){return u.a.get(this.getAdminRoute()+"/logs").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getLogs",e,t))}},{key:"getClusterStatus",value:function(e,t){return u.a.get(this.getAdminRoute()+"/cluster_status").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getClusterStatus",e,t))}},{key:"getServerAudits",value:function(e,t){return u.a.get(this.getAdminRoute()+"/audits").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getServerAudits",e,t))}},{key:"getConfig",value:function(e,t){return u.a.get(this.getAdminRoute()+"/config").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getConfig",e,t))}},{key:"getAnalytics",value:function(e,t,s,n){var a=this.getAdminRoute()+"/analytics/";return a+=null==t?e:t+"/"+e,u.a.get(a).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAnalytics",s,n))}},{key:"getTeamAnalytics",value:function(e,t,s,n){return u.a.get(this.getAdminRoute()+"/analytics/"+e+"/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamAnalytics",s,n))}},{key:"saveConfig",value:function(e,t,s){u.a.post(this.getAdminRoute()+"/save_config").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"saveConfig",t,s))}},{key:"testEmail",value:function(e,t,s){u.a.post(this.getAdminRoute()+"/test_email").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"testEmail",t,s))}},{key:"getClientLicenceConfig",value:function(e,t){u.a.get(this.getLicenseRoute()+"/client_config").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getClientLicenceConfig",e,t))}},{key:"removeLicenseFile",value:function(e,t){u.a.post(this.getLicenseRoute()+"/remove").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"removeLicenseFile",e,t))}},{key:"uploadLicenseFile",value:function(e,t,s){u.a.post(this.getLicenseRoute()+"/add").set(this.defaultHeaders).accept("application/json").attach("license",e,e.name).end(this.handleResponse.bind(this,"uploadLicenseFile",t,s)),this.track("api","api_license_upload")}},{key:"importSlack",value:function(e,t,s){u.a.post(this.getTeamNeededRoute()+"/import_team").set(this.defaultHeaders).accept("application/octet-stream").send(e).end(this.handleResponse.bind(this,"importSlack",t,s))}},{key:"exportTeam",value:function(e,t){u.a.get(this.getTeamsRoute()+"/export_team").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"exportTeam",e,t))}},{key:"adminResetMfa",value:function(e,t,s){var n={};n.user_id=e,u.a.post(this.getAdminRoute()+"/reset_mfa").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"adminResetMfa",t,s))}},{key:"adminResetPassword",value:function(e,t,s,n){var a={};a.new_password=t,a.user_id=e,u.a.post(this.getAdminRoute()+"/reset_password").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"adminResetPassword",s,n)),this.track("api","api_admin_reset_password")}},{key:"ldapSyncNow",value:function(e,t){u.a.post(this.getAdminRoute()+"/ldap_sync_now").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"ldapSyncNow",e,t))}},{key:"ldapTest",value:function(e,t){u.a.post(this.getAdminRoute()+"/ldap_test").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"ldap_test",e,t))}},{key:"findTeamByName",value:function(e,t,s){u.a.post(this.getTeamsRoute()+"/find_team_by_name").set(this.defaultHeaders).type("application/json").accept("application/json").send({name:e}).end(this.handleResponse.bind(this,"findTeamByName",t,s))}},{key:"getTeamByName",value:function(e,t,s){u.a.get(this.getTeamsRoute()+"/name/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamByName",t,s))}},{key:"createTeam",value:function(e,t,s){u.a.post(this.getTeamsRoute()+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createTeam",t,s)),this.track("api","api_users_create","","email",e.name)}},{key:"updateTeam",value:function(e,t,s){u.a.post(this.getTeamNeededRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateTeam",t,s)),this.track("api","api_teams_update_name")}},{key:"getAllTeams",value:function(e,t){u.a.get(this.getTeamsRoute()+"/all").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAllTeams",e,t))}},{key:"getAllTeamListings",value:function(e,t){u.a.get(this.getTeamsRoute()+"/all_team_listings").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAllTeamListings",e,t))}},{key:"getMyTeam",value:function(e,t){u.a.get(this.getTeamNeededRoute()+"/me").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMyTeam",e,t))}},{key:"getTeamMembers",value:function(e,t,s,n,a){u.a.get(this.getTeamNeededRoute(e)+"/members/"+t+"/"+s).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamMembers",n,a))}},{key:"getTeamMember",value:function(e,t,s,n){u.a.get(this.getTeamNeededRoute(e)+"/members/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamMember",s,n))}},{key:"getMyTeamMembers",value:function(e,t){u.a.get(this.getTeamsRoute()+"/members").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMyTeamMembers",e,t))}},{key:"getMyTeamsUnread",value:function(e,t,s){var n=this.getTeamsRoute()+"/unread";e&&(n+="?id="+encodeURIComponent(e)),u.a.get(n).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMyTeamsUnread",t,s))}},{key:"getTeamMembersByIds",value:function(e,t,s,n){u.a.post(this.getTeamNeededRoute(e)+"/members/ids").set(this.defaultHeaders).type("application/json").accept("application/json").send(t).end(this.handleResponse.bind(this,"getTeamMembersByIds",s,n))}},{key:"getTeamStats",value:function(e,t,s){u.a.get(this.getTeamNeededRoute(e)+"/stats").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getTeamStats",t,s))}},{key:"inviteMembers",value:function(e,t,s){u.a.post(this.getTeamNeededRoute()+"/invite_members").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"inviteMembers",t,s)),this.track("api","api_teams_invite_members")}},{key:"addUserToTeam",value:function(e,t,s,n){var a=e;""===a&&(a=this.getTeamId()),u.a.post(this.getTeamsRoute()+"/"+a+"/add_user_to_team").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"addUserToTeam",s,n)),this.track("api","api_teams_invite_members")}},{key:"addUserToTeamFromInvite",value:function(e,t,s,n,a){u.a.post(this.getTeamsRoute()+"/add_user_to_team_from_invite").set(this.defaultHeaders).type("application/json").accept("application/json").send({hash:t,data:e,invite_id:s}).end(this.handleResponse.bind(this,"addUserToTeam",n,a)),this.track("api","api_teams_invite_members")}},{key:"removeUserFromTeam",value:function(e,t,s,n){var a=e;""===a&&(a=this.getTeamId()),u.a.post(this.getTeamsRoute()+"/"+a+"/remove_user_from_team").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"removeUserFromTeam",s,n)),this.track("api","api_teams_remove_members")}},{key:"getInviteInfo",value:function(e,t,s){u.a.post(this.getTeamsRoute()+"/get_invite_info").set(this.defaultHeaders).type("application/json").accept("application/json").send({invite_id:e}).end(this.handleResponse.bind(this,"getInviteInfo",t,s))}},{key:"createUser",value:function(e,t,s){this.createUserWithInvite(e,null,null,null,t,s)}},{key:"createUserWithInvite",value:function(e,t,s,n,a,i){var o=this.getUsersRoute()+"/create";o+="?d="+encodeURIComponent(t),s&&(o+="&h="+encodeURIComponent(s)),n&&(o+="&iid="+encodeURIComponent(n)),u.a.post(o).set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createUser",a,i)),this.track("api","api_users_create","","email",e.email)}},{key:"updateUser",value:function(e,t,s,n){u.a.post(this.getUsersRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateUser",s,n)),t?this.track("api","api_users_update_"+t):this.track("api","api_users_update")}},{key:"updatePassword",value:function(e,t,s,n,a){var i={};i.user_id=e,i.current_password=t,i.new_password=s,u.a.post(this.getUsersRoute()+"/newpassword").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"updatePassword",n,a)),this.track("api","api_users_newpassword")}},{key:"updateUserNotifyProps",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/update_notify").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateUserNotifyProps",t,s)),this.track("api","api_users_update_notification_settings")}},{key:"updateUserRoles",value:function(e,t,s,n){var a={new_roles:t};u.a.post(this.getUserNeededRoute(e)+"/update_roles").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"updateUserRoles",s,n)),this.track("api","api_users_update_user_roles")}},{key:"updateTeamMemberRoles",value:function(e,t,s,n,a){var i={user_id:t,new_roles:s};u.a.post(this.getTeamNeededRoute(e)+"/update_member_roles").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"updateTeamMemberRoles",n,a)),this.track("api","api_teams_update_member_roles")}},{key:"updateActive",value:function(e,t,s,n){var a={};a.user_id=e,a.active=String(t),u.a.post(this.getUsersRoute()+"/update_active").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"updateActive",s,n)),this.track("api","api_users_update_active")}},{key:"sendPasswordReset",value:function(e,t,s){var n={};n.email=e,u.a.post(this.getUsersRoute()+"/send_password_reset").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"sendPasswordReset",t,s)),this.track("api","api_users_send_password_reset")}},{key:"resetPassword",value:function(e,t,s,n){var a={};a.new_password=t,a.code=e,u.a.post(this.getUsersRoute()+"/reset_password").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"resetPassword",s,n)),this.track("api","api_users_reset_password")}},{key:"emailToOAuth",value:function(e,t,s,n,a,i){u.a.post(this.getUsersRoute()+"/claim/email_to_oauth").set(this.defaultHeaders).type("application/json").accept("application/json").send({password:t,email:e,token:s,service:n}).end(this.handleResponse.bind(this,"emailToOAuth",a,i)),this.track("api","api_users_email_to_oauth")}},{key:"oauthToEmail",value:function(e,t,s,n){var a={};a.password=t,a.email=e,u.a.post(this.getUsersRoute()+"/claim/oauth_to_email").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"oauthToEmail",s,n)),this.track("api","api_users_oauth_to_email")}},{key:"emailToLdap",value:function(e,t,s,n,a,i,o){var p={};p.email_password=t,p.email=e,p.ldap_id=n,p.ldap_password=a,p.token=s,u.a.post(this.getUsersRoute()+"/claim/email_to_ldap").set(this.defaultHeaders).type("application/json").accept("application/json").send(p).end(this.handleResponse.bind(this,"emailToLdap",i,o)),this.track("api","api_users_email_to_ldap")}},{key:"ldapToEmail",value:function(e,t,s,n,a,i){var o={};o.email=e,o.ldap_password=n,o.email_password=t,o.token=s,u.a.post(this.getUsersRoute()+"/claim/ldap_to_email").set(this.defaultHeaders).type("application/json").accept("application/json").send(o).end(this.handleResponse.bind(this,"ldapToEmail",a,i)),this.track("api","api_users_oauth_to_email")}},{key:"getInitialLoad",value:function(e,t){u.a.get(this.getUsersRoute()+"/initial_load").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getInitialLoad",e,t))}},{key:"getMe",value:function(e,t){u.a.get(this.getUsersRoute()+"/me").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMe",e,t))}},{key:"getUser",value:function(e,t,s){u.a.get(this.getUserNeededRoute(e)+"/get").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getUser",t,s))}},{key:"getByUsername",value:function(e,t,s){u.a.get(this.getUsersRoute()+"/name/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getByUsername",t,s))}},{key:"getByEmail",value:function(e,t,s){u.a.get(this.getUsersRoute()+"/email/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getByEmail",t,s))}},{key:"login",value:function(e,t,s,n,a){this.doLogin({login_id:e,password:t,token:s},n,a),this.track("api","api_users_login","","login_id",e)}},{key:"loginById",value:function(e,t,s,n,a){this.doLogin({id:e,password:t,token:s},n,a),this.track("api","api_users_login","","id",e)}},{key:"loginByLdap",value:function(e,t,s,n,a){this.doLogin({login_id:e,password:t,token:s,ldap_only:"true"},n,a),this.track("api","api_users_login","","login_id",e)}},{key:"doLogin",value:function(e,t,s){var n=this;u.a.post(this.getUsersRoute()+"/login").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"login",function(e,s){s&&s.header&&(n.token=s.header[f],n.useToken&&(n.defaultHeaders[m]=y+" "+n.token)),t&&t(e,s)},s))}},{key:"logout",value:function(e,t){u.a.post(this.getUsersRoute()+"/logout").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"logout",e,t)),this.track("api","api_users_logout")}},{key:"checkMfa",value:function(e,t,s){var n={login_id:e};u.a.post(this.getUsersRoute()+"/mfa").set(this.defaultHeaders).type("application/json").accept("application/json").send(n).end(this.handleResponse.bind(this,"checkMfa",t,s)),this.track("api","api_users_oauth_to_email")}},{key:"generateMfaSecret",value:function(e,t){u.a.get(this.getUsersRoute()+"/generate_mfa_secret").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"generateMfaSecret",e,t))}},{key:"revokeSession",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/revoke_session").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"revokeSession",t,s))}},{key:"getSessions",value:function(e,t,s){u.a.get(this.getUserNeededRoute(e)+"/sessions").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getSessions",t,s))}},{key:"getAudits",value:function(e,t,s){u.a.get(this.getUserNeededRoute(e)+"/audits").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAudits",t,s))}},{key:"getRecentlyActiveUsers",value:function(e,t,s){u.a.get(this.getAdminRoute()+"/recently_active_users/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getRecentlyActiveUsers",t,s))}},{key:"getProfiles",value:function(e,t,s,n){u.a.get(this.getUsersRoute()+"/"+e+"/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfiles",s,n))}},{key:"getProfilesInTeam",value:function(e,t,s,n,a){u.a.get(this.getTeamNeededRoute(e)+"/users/"+t+"/"+s).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfilesInTeam",n,a))}},{key:"getProfilesInChannel",value:function(e,t,s,n,a){u.a.get(this.getChannelNeededRoute(e)+"/users/"+t+"/"+s).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfilesInChannel",n,a))}},{key:"getProfilesNotInChannel",value:function(e,t,s,n,a){u.a.get(this.getChannelNeededRoute(e)+"/users/not_in_channel/"+t+"/"+s).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getProfilesNotInChannel",n,a))}},{key:"getProfilesByIds",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/ids").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"getProfilesByIds",t,s))}},{key:"searchUsers",value:function(e,t,s,n,a){u.a.post(this.getUsersRoute()+"/search").set(this.defaultHeaders).type("application/json").accept("application/json").send(o()({term:e,team_id:t},s)).end(this.handleResponse.bind(this,"searchUsers",n,a))}},{key:"autocompleteUsersInChannel",value:function(e,t,s,n){u.a.get(this.getChannelNeededRoute(t)+"/users/autocomplete?term="+encodeURIComponent(e)).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"autocompleteUsersInChannel",s,n))}},{key:"autocompleteUsersInTeam",value:function(e,t,s){u.a.get(this.getTeamNeededRoute()+"/users/autocomplete?term="+encodeURIComponent(e)).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"autocompleteUsersInTeam",t,s))}},{key:"autocompleteUsers",value:function(e,t,s){u.a.get(this.getUsersRoute()+"/autocomplete?term="+encodeURIComponent(e)).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"autocompleteUsers",t,s))}},{key:"getStatuses",value:function(e,t){u.a.get(this.getUsersRoute()+"/status").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getStatuses",e,t))}},{key:"getStatusesByIds",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/status/ids").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"getStatuses",t,s))}},{key:"setActiveChannel",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/status/set_active_channel").set(this.defaultHeaders).type("application/json").accept("application/json").send({channel_id:e}).end(this.handleResponse.bind(this,"setActiveChannel",t,s))}},{key:"verifyEmail",value:function(e,t,s,n){u.a.post(this.getUsersRoute()+"/verify_email").set(this.defaultHeaders).type("application/json").accept("application/json").send({uid:e,hid:t}).end(this.handleResponse.bind(this,"verifyEmail",s,n))}},{key:"resendVerification",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/resend_verification").set(this.defaultHeaders).type("application/json").accept("application/json").send({email:e}).end(this.handleResponse.bind(this,"resendVerification",t,s))}},{key:"updateMfa",value:function(e,t,s,n){var a={};a.activate=t,a.token=e,u.a.post(this.getUsersRoute()+"/update_mfa").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"updateMfa",s,n))}},{key:"uploadProfileImage",value:function(e,t,s){u.a.post(this.getUsersRoute()+"/newimage").set(this.defaultHeaders).attach("image",e,e.name).accept("application/json").end(this.handleResponse.bind(this,"uploadProfileImage",t,s)),this.track("api","api_users_update_profile_picture")}},{key:"createChannel",value:function(e,t,s){u.a.post(this.getChannelsRoute()+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"createChannel",t,s)),this.track("api","api_channels_create",e.type,"name",e.name)}},{key:"createDirectChannel",value:function(e,t,s){u.a.post(this.getChannelsRoute()+"/create_direct").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:e}).end(this.handleResponse.bind(this,"createDirectChannel",t,s))}},{key:"updateChannel",value:function(e,t,s){u.a.post(this.getChannelsRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateChannel",t,s)),this.track("api","api_channels_update")}},{key:"updateChannelHeader",value:function(e,t,s,n){var a={channel_id:e,channel_header:t};u.a.post(this.getChannelsRoute()+"/update_header").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"updateChannel",s,n)),this.track("api","api_channels_header")}},{key:"updateChannelPurpose",value:function(e,t,s,n){var a={channel_id:e,channel_purpose:t};u.a.post(this.getChannelsRoute()+"/update_purpose").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"updateChannelPurpose",s,n)),this.track("api","api_channels_purpose")}},{key:"updateChannelNotifyProps",value:function(e,t,s){u.a.post(this.getChannelsRoute()+"/update_notify_props").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updateChannelNotifyProps",t,s))}},{key:"leaveChannel",value:function(e,t,s){u.a.post(this.getChannelNeededRoute(e)+"/leave").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"leaveChannel",t,s)),this.track("api","api_channels_leave")}},{key:"joinChannel",value:function(e,t,s){u.a.post(this.getChannelNeededRoute(e)+"/join").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"joinChannel",t,s)),this.track("api","api_channels_join")}},{key:"joinChannelByName",value:function(e,t,s){u.a.post(this.getChannelNameRoute(e)+"/join").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"joinChannelByName",t,s)),this.track("api","api_channels_join_name")}},{key:"deleteChannel",value:function(e,t,s){u.a.post(this.getChannelNeededRoute(e)+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"deleteChannel",t,s)),this.track("api","api_channels_delete")}},{key:"viewChannel",value:function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"",s=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,n=arguments[3],a=arguments[4];u.a.post(this.getChannelsRoute()+"/view").set(this.defaultHeaders).type("application/json").accept("application/json").send({channel_id:e,prev_channel_id:t,time:s}).end(this.handleResponse.bind(this,"viewChannel",n,a))}},{key:"updateLastViewedAt",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/update_last_viewed_at").set(this.defaultHeaders).type("application/json").accept("application/json").send({active:t}).end(this.handleResponse.bind(this,"updateLastViewedAt",s,n))}},{key:"setLastViewedAt",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/set_last_viewed_at").set(this.defaultHeaders).type("application/json").accept("application/json").send({last_viewed_at:t}).end(this.handleResponse.bind(this,"setLastViewedAt",s,n))}},{key:"getChannels",value:function(e,t){u.a.get(this.getChannelsRoute()+"/").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannels",e,t));
}},{key:"getChannel",value:function(e,t,s){u.a.get(this.getChannelNeededRoute(e)+"/").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannel",t,s)),this.track("api","api_channel_get")}},{key:"getMoreChannels",value:function(e,t){u.a.get(this.getChannelsRoute()+"/more").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMoreChannels",e,t))}},{key:"getMoreChannelsPage",value:function(e,t,s,n){u.a.get(this.getChannelsRoute()+"/more/"+e+"/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMoreChannelsPage",s,n))}},{key:"searchMoreChannels",value:function(e,t,s){u.a.post(this.getChannelsRoute()+"/more/search").set(this.defaultHeaders).type("application/json").accept("application/json").send({term:e}).end(this.handleResponse.bind(this,"searchMoreChannels",t,s))}},{key:"autocompleteChannels",value:function(e,t,s){u.a.get(this.getChannelsRoute()+"/autocomplete?term="+encodeURIComponent(e)).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"autocompleteChannels",t,s))}},{key:"getChannelCounts",value:function(e,t){u.a.get(this.getChannelsRoute()+"/counts").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannelCounts",e,t))}},{key:"getMyChannelMembers",value:function(e,t){u.a.get(this.getChannelsRoute()+"/members").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMyChannelMembers",e,t))}},{key:"getMyChannelMembersForTeam",value:function(e,t,s){u.a.get(this.getTeamsRoute()+"/"+e+"/channels/members").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getMyChannelMembersForTeam",t,s))}},{key:"getChannelByName",value:function(e,t,s){u.a.get(this.getChannelsRoute()+"/name/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannelByName",t,s))}},{key:"getChannelStats",value:function(e,t,s){u.a.get(this.getChannelNeededRoute(e)+"/stats").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannelStats",t,s))}},{key:"getChannelMember",value:function(e,t,s,n){u.a.get(this.getChannelNeededRoute(e)+"/members/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getChannelMember",s,n))}},{key:"getChannelMembersByIds",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/members/ids").set(this.defaultHeaders).type("application/json").accept("application/json").send(t).end(this.handleResponse.bind(this,"getChannelMembersByIds",s,n))}},{key:"addChannelMember",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/add").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"addChannelMember",s,n)),this.track("api","api_channels_add_member")}},{key:"removeChannelMember",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/remove").set(this.defaultHeaders).type("application/json").accept("application/json").send({user_id:t}).end(this.handleResponse.bind(this,"removeChannelMember",s,n)),this.track("api","api_channels_remove_member")}},{key:"updateChannelMemberRoles",value:function(e,t,s,n,a){var i={user_id:t,new_roles:s};u.a.post(this.getChannelNeededRoute(e)+"/update_member_roles").set(this.defaultHeaders).type("application/json").accept("application/json").send(i).end(this.handleResponse.bind(this,"updateChannelMemberRoles",n,a))}},{key:"listCommands",value:function(e,t){u.a.get(this.getCommandsRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listCommands",e,t))}},{key:"executeCommand",value:function(e,t,s,n){u.a.post(this.getCommandsRoute()+"/execute").set(this.defaultHeaders).type("application/json").accept("application/json").send(o()({command:e},t)).end(this.handleResponse.bind(this,"executeCommand",s,n)),this.track("api","api_integrations_used")}},{key:"addCommand",value:function(e,t,s){u.a.post(this.getCommandsRoute()+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"addCommand",t,s)),this.track("api","api_integrations_created")}},{key:"editCommand",value:function(e,t,s){u.a.post(this.getCommandsRoute()+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"editCommand",t,s)),this.track("api","api_integrations_created")}},{key:"deleteCommand",value:function(e,t,s){u.a.post(this.getCommandsRoute()+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteCommand",t,s)),this.track("api","api_integrations_deleted")}},{key:"listTeamCommands",value:function(e,t){u.a.get(this.getCommandsRoute()+"/list_team_commands").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listTeamCommands",e,t))}},{key:"regenCommandToken",value:function(e,t,s){u.a.post(this.getCommandsRoute()+"/regen_token").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"regenCommandToken",t,s))}},{key:"createPost",value:function(e,t,s){u.a.post(this.getPostsRoute(e.channel_id)+"/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(o()({},e,{create_at:0})).end(this.handleResponse.bind(this,"createPost",t,s)),this.track("api","api_posts_create",e.channel_id,"length",e.message.length),e.message.match(/\s#./)&&this.track("api","api_posts_hashtag"),e.message.match(/\s@./)&&this.track("api","api_posts_mentions")}},{key:"getPermalinkTmp",value:function(e,t,s){u.a.get(this.getTeamNeededRoute()+"/pltmp/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPermalinkTmp",t,s))}},{key:"getPostById",value:function(e,t,s){u.a.get(this.getTeamNeededRoute()+"/posts/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostById",t,s))}},{key:"getPost",value:function(e,t,s,n){u.a.get(this.getChannelNeededRoute(e)+"/posts/"+t+"/get").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPost",s,n))}},{key:"updatePost",value:function(e,t,s){u.a.post(this.getPostsRoute(e.channel_id)+"/update").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"updatePost",t,s)),this.track("api","api_posts_update")}},{key:"deletePost",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/posts/"+t+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"deletePost",s,n)),this.track("api","api_posts_delete")}},{key:"search",value:function(e,t,s,n){var a={};a.terms=e,a.is_or_search=t,u.a.post(this.getTeamNeededRoute()+"/posts/search").set(this.defaultHeaders).type("application/json").accept("application/json").send(a).end(this.handleResponse.bind(this,"search",s,n)),this.track("api","api_posts_search")}},{key:"getPostsPage",value:function(e,t,s,n,a){u.a.get(this.getPostsRoute(e)+"/page/"+t+"/"+s).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostsPage",n,a))}},{key:"getPosts",value:function(e,t,s,n){u.a.get(this.getPostsRoute(e)+"/since/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPosts",s,n))}},{key:"getPostsBefore",value:function(e,t,s,n,a,i){u.a.get(this.getPostsRoute(e)+"/"+t+"/before/"+s+"/"+n).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostsBefore",a,i))}},{key:"getPostsAfter",value:function(e,t,s,n,a,i){u.a.get(this.getPostsRoute(e)+"/"+t+"/after/"+s+"/"+n).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPostsAfter",a,i))}},{key:"getFlaggedPosts",value:function(e,t,s,n){u.a.get(this.getTeamNeededRoute()+"/posts/flagged/"+e+"/"+t).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFlaggedPosts",s,n))}},{key:"getFileInfosForPost",value:function(e,t,s,n){u.a.get(this.getChannelNeededRoute(e)+"/posts/"+t+"/get_file_infos").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFileInfosForPost",s,n))}},{key:"getOpenGraphMetadata",value:function(e,t,s){u.a.post(this.getBaseRoute()+"/get_opengraph_metadata").set(this.defaultHeaders).type("application/json").accept("application/json").send({url:e}).end(this.handleResponse.bind(this,"getOpenGraphMetadata",t,s))}},{key:"uploadFile",value:function(e,t,s,n,a,i){return u.a.post(this.getTeamFilesRoute()+"/upload").set(this.defaultHeaders).attach("files",e,t).field("channel_id",s).field("client_ids",n).accept("application/json").end(this.handleResponse.bind(this,"uploadFile",a,i))}},{key:"getFile",value:function(e,t,s){u.a.get(this.getFileRoute(e)+"/get").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFile",t,s))}},{key:"getFileThumbnail",value:function(e,t,s){u.a.get(this.getFileRoute(e)+"/get_thumbnail").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFileThumbnail",t,s))}},{key:"getFilePreview",value:function(e,t,s){u.a.get(this.getFileRoute(e)+"/get").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFilePreview",t,s))}},{key:"getFileInfo",value:function(e,t,s){u.a.get(this.getFileRoute(e)+"/get_info").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getFileInfo",t,s))}},{key:"getPublicLink",value:function(e,t,s){u.a.get(this.getFileRoute(e)+"/get_public_link").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPublicLink",t,s))}},{key:"registerOAuthApp",value:function(e,t,s){u.a.post(this.getOAuthRoute()+"/register").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"registerOAuthApp",t,s)),this.track("api","api_apps_register")}},{key:"listOAuthApps",value:function(e,t){u.a.get(this.getOAuthRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getOAuthApps",e,t))}},{key:"allowOAuth2",value:function(e,t,s,n,a,i,o){u.a.get(this.getOAuthRoute()+"/allow").set(this.defaultHeaders).type("application/json").accept("application/json").query({response_type:e}).query({client_id:t}).query({redirect_uri:s}).query({scope:a}).query({state:n}).end(this.handleResponse.bind(this,"allowOAuth2",i,o))}},{key:"listOAuthApps",value:function(e,t){u.a.get(this.getOAuthRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getOAuthApps",e,t))}},{key:"deleteOAuthApp",value:function(e,t,s){u.a.post(this.getOAuthRoute()+"/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteOAuthApp",t,s))}},{key:"getOAuthAppInfo",value:function(e,t,s){u.a.get(this.getOAuthRoute()+"/app/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getOAuthAppInfo",t,s))}},{key:"getAuthorizedApps",value:function(e,t){u.a.get(this.getOAuthRoute()+"/authorized").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"getAuthorizedApps",e,t))}},{key:"deauthorizeOAuthApp",value:function(e,t,s){u.a.post(this.getOAuthRoute()+"/"+e+"/deauthorize").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"deauthorizeOAuthApp",t,s))}},{key:"regenerateOAuthAppSecret",value:function(e,t,s){u.a.post(this.getOAuthRoute()+"/"+e+"/regen_secret").set(this.defaultHeaders).type("application/json").accept("application/json").send().end(this.handleResponse.bind(this,"regenerateOAuthAppSecret",t,s))}},{key:"addIncomingHook",value:function(e,t,s){u.a.post(this.getHooksRoute()+"/incoming/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"addIncomingHook",t,s)),this.track("api","api_integrations_created")}},{key:"deleteIncomingHook",value:function(e,t,s){u.a.post(this.getHooksRoute()+"/incoming/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteIncomingHook",t,s)),this.track("api","api_integrations_deleted")}},{key:"listIncomingHooks",value:function(e,t){u.a.get(this.getHooksRoute()+"/incoming/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listIncomingHooks",e,t))}},{key:"addOutgoingHook",value:function(e,t,s){u.a.post(this.getHooksRoute()+"/outgoing/create").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"addOutgoingHook",t,s)),this.track("api","api_integrations_created")}},{key:"deleteOutgoingHook",value:function(e,t,s){u.a.post(this.getHooksRoute()+"/outgoing/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteOutgoingHook",t,s)),this.track("api","api_integrations_deleted")}},{key:"listOutgoingHooks",value:function(e,t){u.a.get(this.getHooksRoute()+"/outgoing/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listOutgoingHooks",e,t))}},{key:"regenOutgoingHookToken",value:function(e,t,s){u.a.post(this.getHooksRoute()+"/outgoing/regen_token").set(this.defaultHeaders).type("application/json").accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"regenOutgoingHookToken",t,s))}},{key:"getAllPreferences",value:function(e,t){u.a.get(this.getBaseRoute()+"/preferences/").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getAllPreferences",e,t))}},{key:"savePreferences",value:function(e,t,s){u.a.post(this.getBaseRoute()+"/preferences/save").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"savePreferences",t,s))}},{key:"getPreferenceCategory",value:function(e,t,s){u.a.get(this.getBaseRoute()+"/preferences/"+e).set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"getPreferenceCategory",t,s))}},{key:"deletePreferences",value:function(e,t,s){u.a.post(this.getBaseRoute()+"/preferences/delete").set(this.defaultHeaders).type("application/json").accept("application/json").send(e).end(this.handleResponse.bind(this,"deletePreferences",t,s))}},{key:"listEmoji",value:function(e,t){u.a.get(this.getEmojiRoute()+"/list").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listEmoji",e,t))}},{key:"addEmoji",value:function(e,t,s,n){u.a.post(this.getEmojiRoute()+"/create").set(this.defaultHeaders).accept("application/json").attach("image",t,t.name).field("emoji",a()(e)).end(this.handleResponse.bind(this,"addEmoji",s,n))}},{key:"deleteEmoji",value:function(e,t,s){u.a.post(this.getEmojiRoute()+"/delete").set(this.defaultHeaders).accept("application/json").send({id:e}).end(this.handleResponse.bind(this,"deleteEmoji",t,s))}},{key:"getCustomEmojiImageUrl",value:function(e){return this.getEmojiRoute()+"/"+e}},{key:"uploadCertificateFile",value:function(e,t,s){u.a.post(this.getAdminRoute()+"/add_certificate").set(this.defaultHeaders).accept("application/json").attach("certificate",e,e.name).end(this.handleResponse.bind(this,"uploadCertificateFile",t,s))}},{key:"removeCertificateFile",value:function(e,t,s){u.a.post(this.getAdminRoute()+"/remove_certificate").set(this.defaultHeaders).accept("application/json").send({filename:e}).end(this.handleResponse.bind(this,"removeCertificateFile",t,s))}},{key:"samlCertificateStatus",value:function(e,t){u.a.get(this.getAdminRoute()+"/saml_cert_status").set(this.defaultHeaders).type("application/json").accept("application/json").end(function(s,n){return s?t(s):(n.body||console.error("Missing response body for samlCertificateStatus"),e(n.body))})}},{key:"saveReaction",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/posts/"+t.post_id+"/reactions/save").set(this.defaultHeaders).accept("application/json").send(t).end(this.handleResponse.bind(this,"saveReaction",s,n))}},{key:"deleteReaction",value:function(e,t,s,n){u.a.post(this.getChannelNeededRoute(e)+"/posts/"+t.post_id+"/reactions/delete").set(this.defaultHeaders).accept("application/json").send(t).end(this.handleResponse.bind(this,"deleteReaction",s,n))}},{key:"listReactions",value:function(e,t,s,n){u.a.get(this.getChannelNeededRoute(e)+"/posts/"+t+"/reactions").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"listReactions",s,n))}},{key:"webrtcToken",value:function(e,t){u.a.post(this.getWebrtcRoute()+"/token").set(this.defaultHeaders).type("application/json").accept("application/json").end(this.handleResponse.bind(this,"webrtcToken",e,t))}}]),e}();t.a=R},function(e,t,s){"use strict";var n=s(0),a=s.n(n),i=s(6),o=s.n(i),p=s(1),l=s.n(p),d=s(2),c=s.n(d),h=7,u=3e3,r=3e5,g=function(){function e(){l()(this,e),this.conn=null,this.connectionUrl=null,this.sequence=1,this.connectFailCount=0,this.eventCallback=null,this.responseCallbacks={},this.firstConnectCallback=null,this.reconnectCallback=null,this.errorCallback=null,this.closeCallback=null}return c()(e,[{key:"initialize",value:function(){var e=this,t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.connectionUrl,s=arguments[1];if(!this.conn){if(null==t)return void console.log("websocket must have connection url");0===this.connectFailCount&&console.log("websocket connecting to "+t),this.conn=new WebSocket(t),this.connectionUrl=t,this.conn.onopen=function(){s&&e.sendMessage("authentication_challenge",{token:s}),e.connectFailCount>0?(console.log("websocket re-established connection"),e.reconnectCallback&&e.reconnectCallback()):e.firstConnectCallback&&e.firstConnectCallback(),e.connectFailCount=0},this.conn.onclose=function(){e.conn=null,e.sequence=1,0===e.connectFailCount&&console.log("websocket closed"),e.connectFailCount++,e.closeCallback&&e.closeCallback(e.connectFailCount);var n=u;e.connectFailCount>h&&(n=u*e.connectFailCount*e.connectFailCount,n>r&&(n=r)),setTimeout(function(){e.initialize(t,s)},n)},this.conn.onerror=function(t){e.connectFailCount<=1&&(console.log("websocket error"),console.log(t)),e.errorCallback&&e.errorCallback(t)},this.conn.onmessage=function(t){var s=JSON.parse(t.data);s.seq_reply?(s.error&&console.log(s),e.responseCallbacks[s.seq_reply]&&(e.responseCallbacks[s.seq_reply](s),o()(e.responseCallbacks,s.seq_reply))):e.eventCallback&&e.eventCallback(s)}}}},{key:"setEventCallback",value:function(e){this.eventCallback=e}},{key:"setFirstConnectCallback",value:function(e){this.firstConnectCallback=e}},{key:"setReconnectCallback",value:function(e){this.reconnectCallback=e}},{key:"setErrorCallback",value:function(e){this.errorCallback=e}},{key:"setCloseCallback",value:function(e){this.closeCallback=e}},{key:"close",value:function(){this.connectFailCount=0,this.sequence=1,this.conn&&this.conn.readyState===WebSocket.OPEN&&(this.conn.onclose=function(){},this.conn.close(),this.conn=null,console.log("websocket closed"))}},{key:"sendMessage",value:function(e,t,s){var n={action:e,seq:this.sequence++,data:t};s&&(this.responseCallbacks[n.seq]=s),this.conn&&this.conn.readyState===WebSocket.OPEN?this.conn.send(a()(n)):this.conn&&this.conn.readyState!==WebSocket.CLOSED||(this.conn=null,this.initialize())}},{key:"userTyping",value:function(e,t,s){var n={};n.channel_id=e,n.parent_id=t,this.sendMessage("user_typing",n,s)}},{key:"getStatuses",value:function(e){this.sendMessage("get_statuses",null,e)}},{key:"getStatusesByIds",value:function(e,t){var s={};s.user_ids=e,this.sendMessage("get_statuses_by_ids",s,t)}}]),e}();t.a=g},function(e,t){e.exports=function(e){if(!e.webpackPolyfill){var t=Object.create(e);t.children||(t.children=[]),Object.defineProperty(t,"loaded",{enumerable:!0,get:function(){return t.l}}),Object.defineProperty(t,"id",{enumerable:!0,get:function(){return t.i}}),Object.defineProperty(t,"exports",{enumerable:!0}),t.webpackPolyfill=1}return t}},function(e,t){e.exports=require("babel-runtime/core-js/reflect/delete-property")},function(e,t){e.exports=require("babel-runtime/helpers/extends")},function(e,t){e.exports=require("superagent")},function(e,t,s){"use strict";(function(e){Object.defineProperty(t,"__esModule",{value:!0});var n=s(3),a=s(4);e.exports.Client=n.a,e.exports.WebSocketClient=a.a}).call(t,s(5)(e))}]);